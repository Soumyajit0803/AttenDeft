import tkinter as tk
import tkinter.ttk as ttk
import tkinter.filedialog as tkf
from tkinter import messagebox as mbx
from Attendance_Marker import write_attendance
from pickle import load
from os import getcwd,startfile
from subprocess import call
from platform import system

class Attendance(tk.Frame):
    '''purpose: to record everyday attendance'''
    def __init__(self, parent, controller):
        tk.Frame.__init__(self, parent)
        self.controller = controller
        self.pic = tk.PhotoImage(file='sidepane3.PNG')
        tk.Label(self,image=self.pic,bd=0).grid(row=0,column=0)
        self.parsefile=''
        widgets=tk.LabelFrame(self)
        widgets.grid(row=0,column=1,sticky='nse')
        tk.Label(widgets,text='ATTENDANCE',font=('calibri',20,'italic bold'),fg='#C53300').pack(side='top',anchor='w',padx=10)
        
		#Description
        define="You are required to upload the CSV file generated by your Google Extension. Mention the class for which you wish to mark the attendance and then browse the very file generated for the undertaken class. Click 'submit' to record the attendance and you are done!" 
        tk.Label(widgets,text=define,font=('Book Antiqua',13),wraplength=512,justify=tk.LEFT).pack(padx=7,pady=5)
		#Input class
        tk.Label(widgets,text='Select Class: ',fg='#C53300',font=('',12,'bold')).place(x=0,y=165)

		#ComboBox widget to show classes
        self.Class=ttk.Combobox(widgets,width=18,values = (),state='readonly',postcommand=self.update_combo, font=('calibri',15))
        self.Class.place(x=120,y=165)
        self.location=tk.Label(widgets,text='No file chosen',font=('',12,'italic'))

        self.location.place(x=110,y=210)

        tk.Button(widgets,text='Upload File: ',font=('',12),command=self.getfile,bg='#C53300',fg='white').place(x=0,y=210)
        tk.Button(widgets,text='SUBMIT DATA',font=('',12),command=self.submitfile,bg='#C53300',fg='white').place(x=350,y=210)
        tk.Button(widgets,text='BACK',font=('',12),command=lambda: controller.show_frame("Main_Page"),bg='#C53300',fg='white').place(x=0,y=475)
        tk.Label(widgets,text = "NOTE: Please open the class file as directed and SAVE changes done by the software. You may add your changes also.",font=('cambria',13,'italic'),wraplength=160,justify=tk.LEFT).place(x=0,y=270)# 512
        
        self.picf = tk.PhotoImage(file='attendpic.PNG')
        tk.Label(widgets,image=self.picf,bd=0).place(x=170,y=290)

    def submitfile(self):
        '''parse the csv, write data, prompt success msg'''
        if self.Class.get()=='':
            mbx.showwarning('missing','class field cannot be empty')

        elif self.location['text']=='No file chosen':
            mbx.showwarning('missing','file not selected')
        else:
            '''Mark attendance'''
            try:
                absentees = write_attendance(self.parsefile,f'{self.Class.get()}.xlsx') 

                if absentees:
                    mbx.showinfo('Bunkers caught',f'students {", ".join(absentees)} \npresent in class for a brief interval,\nhave been marked absent.')
            
                mbx.showinfo('Recorded!','Attendance marked!\nOpening class file. Please SAVE it :)')
                self.open_class(self.Class.get())
            except Exception as e:
                print(e)
                mbx.showerror('ERROR','Unreadable Attendance csv file.\nPlease check what you are giving.')


    def getfile(self):
        '''saves location of file obj'''
        file=tkf.askopenfile(mode ='r', filetypes =[('CSV Files', '*.csv')])
        if file:
            self.location.config(text=file.name.split('/')[-1])
            self.parsefile=file.name
    
    def update_combo(self):
        '''functionality of combobox'''
        f = open('ChalkBox.AD','rb')
        d = load(f)
        f.close()
        self.Class['values']= d.get('classes',())
    
    def open_class(self,path):
        '''auto-opens the workbook'''
        os = system()
        cwd=getcwd()               
        if os=='Darwin': #macOS
            call(('open',f"{cwd}\\{path}.xlsx"))
        elif os=='Windows':
            startfile(f"{cwd}\\{path}.xlsx")
        else:
            call(('xdg-open',f"{cwd}\\{path}.xlsx"))
            

